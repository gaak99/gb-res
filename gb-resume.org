#+TITLE: Glenn T Barry
#+CREATED: aprl18

* URL of this resume
https://github.com/gaak99/gb-res
* Contact
** email: gaak99+resume@gmail.com
** github: https://github.com/gaak99
** ph: 415 336-7110
** residence: Atlanta, GA 30319
* Description
I enjoy building computing systems and services based on my knowledge
and experience in cloud storage, Unix network security/filesystems, and
web technologies.
* Computing Technologies
** Languages
*** More experience
**** Python
***** _oxly_ auto-merges Dropbox file revisions with a git-like cli 
****** https://github.com/gaak99/oxly
The side project that I put the most time into and I use on a regular basis.
***** see also Seagate below
**** C
***** see Sun Micro below
**** bash
***** https://github.com/gaak99/oxly/blob/master/oxly/scripts/oxmerge.sh
**** Emacs Lisp
*****  Basic bloom filter implementation in Emacs Lisp
****** https://github.com/gaak99/emacs-bloomfilter
*** Less experience
**** Rust
***** Remacs open source project - port C layer of GNU Emacs to Rust
I ported/re-wrote several low level directory/file functions from C to Rust.
I contributed 98% (as of Aug '18) of the code in the dired Rust files.

https://github.com/Wilfred/remacs/blob/master/rust_src/src/dired_unix.rs
**** Clojure
***** Concurrent recursive grep using Clojure.core.async Go-style channels
https://gist.github.com/gaak99/94305797fe5c81e6f20bd2095ec23152
** Operating systems
*** Unix
**** Ubuntu Linux
My dev laptop runs Ubuntu 16.04. Also see Seagate below.
**** Solaris / OpenSolaris
See Sun Micro below.
**** SmartOS
It's a cloud optimized derivative of OpenSolaris from Joyent.
It has some unique features for cloud devops such as DTrace.
** Web frameworks
*** Flask
**** see Seagate below
*** Django
**** see MeetMeTix below
** Cloud services
*** Dropbox API
**** side project -- oxly -- https://github.com/gaak99/oxly
*** FaunaDb API
**** side project -- Atl100 cli -- https://github.com/gaak99/atl100
**** side project -- Hylisp -- https://github.com/gaak99/faunadb-hylisp
Hy is a Lisp dialect embedded in Python.
I believe I was the first to demo Hy for better looking code when using the FaunaDb functional-style Python API.
*** AWS S3 API
**** see Seagate below
*** Openstack Swift object storage API
**** see Seagate below
*** rsync.net
**** ZFS as a Service
It's one of my favorite backup services as not only does it provide a
familiar Unix file system interface (via sshfs) but also provides
read-only snapshots several times a day.
* Experience
** June 2013 - June 2015, Seagate/Evault, San Francisco, CA.
I started with Evault -- a wholly-owned subsidiary of Seagate -- and last half of my tenure there we were brought into Seagate.
*** Software engineer, cloud storage R&D group.
**** Major project
***** LTS2.evault.com -  cheaper/faster-retreival (than AWS Glacier) long-term object storage
The svc was based on Openstack Swift object storage code (Python).  Swift ran on a Ubuntu server cluster.
****** I "owned" Swift S3 emulation module aka fixed many bugs
****** Data center to data center object replication perf improvements
****** Basic web services  w/Python Flask - passwd reset, etc.
** Sep 2012 - Jan 2013, MeetMeTix.com, Atlanta, GA.
*** Contract programmer, Python/Django Web Apps.
**** Major Projects:
***** Integrated/tested/refined Django-Social-Auth app for Facebook
      Single-sign-on feature.
***** Developed (Python) from scratch a full Selenium automated test suite.
** Oct 2001 - Jun 2012, Sun Micro (later sold to Oracle, Inc), Menlo Park, CA.
*** Software engineer, Solaris OS/Net Security technologies.
**** Recent Projects:
***** Refined initial design of proposed Solaris Secure Boot feature
      with an emphasis on next generation SPARC systems.
***** Developed (C language) diagnosability improvements of Secure
      (GSS/Kerberos) NFS/SMB features for Solaris.
***** Led team and co-designed/developed (C language) RPC-based DB
      replication protocol/feature for the Kerberos KDC. This code was
      fed upstream and subsequently released by MIT Kerberos
      Open Source Project.
***** Re-wrote (C language) kernel RPC GSS server module to fix major
      performance issues found while dogfooding building NFS server.
** Oct 1996 - Oct 2001, Sun Micro.
*** Software engineer, Solaris Sustaining OS/Net Name Services.
**** Diagnosed/coded/tested fixes for (C language) escalated bugs.
** June 1987 - Sep 1996, Emory University MathCS dept, Atlanta GA.
Unix System Administrator.
* Education
June 1981 - 1987, Georgia Tech, BS in Info and Computer Science.
