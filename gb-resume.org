#+TITLE: Resume of Glenn T. Barry
#+CREATED: aprl18

* Description
Seeking a software development position in Atlanta (or remote) utilizing my skills and job experience detailed below.
* URLs for this Resume
** Web site: https://gaak99.github.io/resume
** Raw formats including plain text: https://github.com/gaak99/gb-res
* Contact
** email: gaak99@gmail.com
* Computing Technologies
** [[https://github.com/gaak99][Github]]
** Languages
*** More experience
**** Python
***** /oxly/ auto-merges Dropbox file revisions with a /git/-like cli [[https://github.com/gaak99/oxly][github]]
The side project that I put the most time into and use on a regular basis.

It uses the basic Python object oriented features and some advanced Python features such as decorators.
I wrote the /_dbxauth/ decorator in [[https://github.com/gaak99/oxly/blob/master/oxly/core.py][oxly/core.py]] and the excellent
/Click/ CLI argument processing library/API used here is heavily based
on them (see [[https://github.com/gaak99/oxly/blob/master/oxly/scripts/clickit.p][oxly/scripts/clickit.py]]).
***** see also Seagate [[#seagate][below]]
**** C
***** see Sun Microsystems [[#sunmicro][below]]
**** bash(1)
***** /oxmerge/ is a shell wrapper for the /oxly/ common case [[https://github.com/gaak99/oxly/blob/master/oxly/scripts/oxmerge.sh][github]]
***** see also Emory [[#emory][below]]
*** Less experience
**** Rust[fn:1]
***** Remacs open source project - "oxidize" (port) C layer of GNU Emacs to Rust [[https://github.com/Wilfred/remacs/blob/master/rust_src/src/dired_unix.rs][github]]
I +ported+ re-wrote several low level directory/file functions from C to Rust.

I contributed 98% (as of Aug '18) of the code in the dired Rust files.

I used some functional style Rust features here in [[https://github.com/Wilfred/remacs/blob/master/rust_src/src/dired_unix.rs][dired unix.rs]] (see /fattrs_to_list/).
**** Lisp
***** Clojure
****** Concurrent recursive "grep" using /Clojure.core.async/ Go-style channels [[https://gist.github.com/gaak99/94305797fe5c81e6f20bd2095ec23152][github]]
***** Basic bloom filter implementation in Emacs Lisp [[https://github.com/gaak99/emacs-bloomfilter][github]]
I used the [[https://github.com/magnars/dash.el][dash]] uber modern/functional Lisp list library.
** Operating Systems
*** Unix
**** Ubuntu Linux
My dev laptop runs Ubuntu 16.04. See also Seagate [[#seagate][below]].
**** Solaris / OpenSolaris
See Sun Microsystems [[#sunmicro][below]].
**** SmartOS
This cloud optimized derivative of OpenSolaris has some unique features for cloud devops such as DTrace.
** Web Frameworks
*** Flask
**** see Seagate [[#seagate][below]]
*** Django
**** see MeetMeTix [[#mmtix][below]]
** Cloud Services
*** AWS S3 API
**** see Seagate [[#seagate][below]]
*** Dropbox API
**** /oxly/ side project [[https://github.com/gaak99/oxly][github]]
*** FaunaDb[fn:2] API
**** /ATL100/ side project [[https://github.com/gaak99/atl100][github]]
**** /hylisp/ side project [[https://github.com/gaak99/faunadb-hylisp][github]]
*** Openstack Swift object storage API
**** see Seagate [[#seagate][below]]
*** rsync.net
**** ZFS as a Service
It's one of my favorite backup services as not only does it provide a
familiar Unix file system interface (via sshfs) but also provides
read-only snapshots several times a day.
* Job Experience
** June 2013 - June 2015, Seagate/Evault, San Francisco, CA.
   :PROPERTIES:
   :CUSTOM_ID: seagate
   :END:
I was one of the first engineers hired to this project that started as a skunkworks within Evault -- a wholly-owned subsidiary of Seagate -- and last half of my tenure there we were brought into Seagate for the new Cloud Storage division.
*** Software engineer, Cloud Storage R&D Group.
**** Major project
***** LTS2.evault.com -  cheaper and faster retrieval (vs AWS Glacier) of long-term object storage
The service was based on Openstack Swift[fn:3] object storage open source project.

Swift runs on a Ubuntu cluster (we had one cluster in Salt Lake City and a second one in Oklahoma City).

Swift is many thousands of lines of Python 2 and is heavily object oriented.
And the code tends to be of high quality as it has many eyes of Python experts for code review.
****** I "owned" Swift S3 emulation module aka fixed many bugs
****** Data center to data center object replication perf improvements
****** Basic web services  w/Python Flask - passwd reset, etc.
****** Agile methodology and JIRA/Confluence/Stash was used for all the projects
** Sep 2012 - Jan 2013, MeetMeTix.com, Atlanta, GA.
   :PROPERTIES:
   :CUSTOM_ID: mmtix
   :END:
*** Contract programmer, Python/Django Web Apps.
**** Major Projects:
***** Single sign-on for the site
Integrated/tested/refined Django-Social-Auth app for Facebook single sign-on feature.
***** Developed (Python) from scratch a full Selenium automated test suite.
** Oct 2001 - Jun 2012, Sun Microsystems (later acquired by Oracle, Inc), Menlo Park, CA.
   :PROPERTIES:
   :CUSTOM_ID: sunmicro
   :END:
*** Software engineer, Solaris OS/Net Security Technologies.
**** Last few projects:
***** Solaris secure boot feature
Refined initial design with an emphasis on next generation SPARC systems.
***** Diagnosability improvements of Solaris Secure NFS/SMB (C development)
***** Kerberos KDC server db replication  (C development)
I led team and co-designed/developed RPC-based DB
replication protocol/feature for the Kerberos KDC.
***** Solaris kernel RPC GSS modules server performance improvements  (C development)
***** Solaris single sign-on via GSS/Kerberos (C development)
** Oct 1996 - Oct 2001, Sun Microsystems.
*** Software engineer, Solaris Sustaining OS/Net Name Services.
**** Diagnosed/coded/tested fixes (C language) for escalated bugs.
** June 1987 - Sep 1996, Emory University MathCS Dept, Atlanta GA.
   :PROPERTIES:
   :CUSTOM_ID: emory
   :END:
Unix System Administrator.
* Education
June 1981 - 1987, Georgia Tech, BS in Info and Computer Science.
* Footnotes
[fn:1] [[https://en.wikipedia.org/wiki/Rust_(programming_language)][Wikipedia]]
#+BEGIN_QUOTE
Rust is a systems programming language sponsored by Mozilla which
describes it as a "safe, concurrent, practical language", supporting
functional and imperative-procedural paradigms. Rust is syntactically
similar to C++[according to whom?], but its designers intend it to
provide better memory safety while still maintaining performance.
#+END_QUOTE
[fn:2] [[https://www.infoq.com/news/2017/03/faunadb][Infoq]]
#+BEGIN_QUOTE
FaunaDB is a transactional, temporal, geographically distributed,
strongly consistent, secure, multi-tenant, QoS-managed operational
database. It's implemented on the JVM for portability, and it's
relational, but not SQL. Instead, it's queried via type-safe embedded
DSLs, like LINQ. FaunaDB is a return to the general database purpose
model, but built for the cloud instead of the mainframes of the 80s.
#+END_QUOTE
[fn:3] [[https://wiki.openstack.org/wiki/Swift][Openstack Wiki]]
#+BEGIN_QUOTE
The OpenStack Object Store project, known as Swift, offers cloud
storage software so that you can store and retrieve lots of data with
a simple API. It's built for scale and optimized for durability,
availability, and concurrency across the entire data set. Swift is
ideal for storing unstructured data that can grow without bound.
#+END_QUOTE
